vector < string[2] > order;
for(int i=0;i<list_of_join_conds.size();i++)
{
	Tokenizer tk;
	tk.set(list_of_join_conds[i]);
	tk.setDelimiter("=");
	string a = tk.next();
	string b = tk.next();
	tk.set(a);
	tk.setDelimiter(".");
	string a1 = tk.next();
	string a2 = tk.next();
	tk.set(b);
	tk.setDelimiter(".");
	string b1 = tk.next();
	string b2 = tk.next();

	if(i>0)
	{
		if(arr[i][0] == arr[i-1][0] || arr[i][0] == arr[i-1][2])
			link[count-1] = arr[i][0];
		else
			link[count-1] = arr[i][2];
	}
	count++;
}
int min = 99999999;
int pos;
for(int i=0;i<list_of_join_conds.size();i++)
{
	int temp = join_weight(arr[i][0],arr[i][1],arr[i][2],arr[i][3]);
	if(temp<min)
	{
		min = temp;
		pos = i;
	}
}
int fl = 0;
for(int i=0;i<list_of_join_conds.size();i++)
{
	if(fl == 0)
		cout << "(";
	if(i==pos)
	{
		cout << "(" << link[i] << "," << link[i+1] << ")";
		i++;
	}
	else
		cout << link[i];
	if(fl==1)
		cout << ")";
